<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator><link href="/blog-archive/feed.xml" rel="self" type="application/atom+xml" /><link href="/blog-archive/" rel="alternate" type="text/html" /><updated>2022-03-29T23:26:55+08:00</updated><id>/blog-archive/feed.xml</id><title type="html">酷PHP</title><subtitle>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.</subtitle><author><name>魔王卷子</name></author><entry><title type="html">Ubuntu 安装 NodeJS</title><link href="/blog-archive/nodejs/ubuntu-install-node/" rel="alternate" type="text/html" title="Ubuntu 安装 NodeJS" /><published>2022-03-14T00:00:00+08:00</published><updated>2022-03-15T06:38:00+08:00</updated><id>/blog-archive/nodejs/ubuntu-install-node</id><content type="html" xml:base="/blog-archive/nodejs/ubuntu-install-node/">&lt;p&gt;Ubuntu 目前支持 16.04 ~ 21.10 版本的。&lt;/p&gt;

&lt;h2 id=&quot;安装-node&quot;&gt;安装 Node&lt;/h2&gt;

&lt;p&gt;以下命令安装的是长期支持版，也就是大部分人推荐安装的版本：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;安装时可能需要输入 root 密码。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl &lt;span class=&quot;nt&quot;&gt;-fsSL&lt;/span&gt; https://deb.nodesource.com/setup_lts.x | &lt;span class=&quot;nb&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-E&lt;/span&gt; bash -
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt; nodejs
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;这样就安装完成了。并且顺带着安装了 npm。&lt;/p&gt;

&lt;p&gt;下面查看下安装的版本。&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;node &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt;
v16.14.2
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;npm &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt;
8.5.0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;安装-yarn&quot;&gt;安装 yarn&lt;/h2&gt;

&lt;p&gt;corepack 在 node &amp;gt;= 16.10 是默认安装的，但是并未开启，需要执行以下命令启动：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;corepack &lt;span class=&quot;nb&quot;&gt;enable&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;现在查看下 yarn 的版本:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;yarn &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt;
1.22.15
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;这样就齐活了。&lt;/p&gt;

&lt;h2 id=&quot;设置镜像&quot;&gt;设置镜像&lt;/h2&gt;

&lt;p&gt;这里需要注意的是，&lt;a href=&quot;https://zhuanlan.zhihu.com/p/465424728&quot;&gt;淘宝镜像即将停止解析&lt;/a&gt; ，需要使用 npmmirror 进行替换。&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm config &lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;registry https://registry.npmmirror.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;npm-基本用法&quot;&gt;npm 基本用法&lt;/h2&gt;

&lt;p&gt;// TODO&lt;/p&gt;

&lt;h2 id=&quot;尾巴&quot;&gt;尾巴&lt;/h2&gt;

&lt;p&gt;我能想到的就是这些了。后续如果还有什么我再去更新。&lt;/p&gt;</content><author><name>魔王卷子</name></author><category term="nodejs" /><category term="ubuntu" /><category term="nodejs" /></entry><entry><title type="html">Ubuntu 安装后</title><link href="/blog-archive/ubuntu/ubuntu-post-installation/" rel="alternate" type="text/html" title="Ubuntu 安装后" /><published>2022-03-13T00:00:00+08:00</published><updated>2022-03-13T08:00:00+08:00</updated><id>/blog-archive/ubuntu/ubuntu-post-installation</id><content type="html" xml:base="/blog-archive/ubuntu/ubuntu-post-installation/">&lt;h2 id=&quot;执行-sudo-命令忽略密码&quot;&gt;执行 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo&lt;/code&gt; 命令忽略密码&lt;/h2&gt;

&lt;p&gt;// TODO&lt;/p&gt;

&lt;h2 id=&quot;安装-vscode&quot;&gt;安装 VSCode&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;参考：https://code.visualstudio.com/docs/setup/linux&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;安装源：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /tmp
wget &lt;span class=&quot;nt&quot;&gt;-qO-&lt;/span&gt; https://packages.microsoft.com/keys/microsoft.asc | gpg &lt;span class=&quot;nt&quot;&gt;--dearmor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; packages.microsoft.gpg
&lt;span class=&quot;nb&quot;&gt;sudo install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; root &lt;span class=&quot;nt&quot;&gt;-g&lt;/span&gt; root &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; 644 packages.microsoft.gpg /etc/apt/trusted.gpg.d/
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;sh &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'echo &quot;deb [arch=amd64,arm64,armhf signed-by=/etc/apt/trusted.gpg.d/packages.microsoft.gpg] https://packages.microsoft.com/repos/code stable main&quot; &amp;gt; /etc/apt/sources.list.d/vscode.list'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;安装程序：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt update
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;code
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;安装-microsoft-edge-浏览器&quot;&gt;安装 Microsoft Edge 浏览器&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;参考：https://www.microsoftedgeinsider.com/zh-cn/download/&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /tmp
wget &lt;span class=&quot;nt&quot;&gt;-qO-&lt;/span&gt; https://packages.microsoft.com/keys/microsoft.asc | gpg &lt;span class=&quot;nt&quot;&gt;--dearmor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; microsoft.gpg
&lt;span class=&quot;nb&quot;&gt;sudo install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; root &lt;span class=&quot;nt&quot;&gt;-g&lt;/span&gt; root &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; 644 microsoft.gpg /usr/share/keyrings/
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;sh &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'echo &quot;deb [arch=amd64 signed-by=/usr/share/keyrings/microsoft.gpg] https://packages.microsoft.com/repos/edge stable main&quot; &amp;gt; /etc/apt/sources.list.d/microsoft-edge-beta.list'&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt update
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;microsoft-edge-stable
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;安装-git&quot;&gt;安装 Git&lt;/h2&gt;

&lt;p&gt;参考 &lt;a href=&quot;./git-basic-usage.md&quot;&gt;Git 基础用法&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;安装-simplenote&quot;&gt;安装 SimpleNote&lt;/h2&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;snap find simplenote
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;邮件客户端&quot;&gt;邮件客户端&lt;/h2&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;thunderbird thunderbird-locale-zh-hans
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;qq-音乐&quot;&gt;QQ 音乐&lt;/h2&gt;

&lt;p&gt;下载地址: https://y.qq.com/download/download.html&lt;/p&gt;

&lt;p&gt;双击安装。&lt;/p&gt;

&lt;h2 id=&quot;网盘下载--百度网盘&quot;&gt;网盘/下载 —— 百度网盘&lt;/h2&gt;

&lt;p&gt;下载：https://pan.baidu.com/download&lt;/p&gt;

&lt;p&gt;双击安装。&lt;/p&gt;

&lt;h2 id=&quot;小技巧&quot;&gt;小技巧&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;终端临时设置语言：&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;locale &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 获取已经安装的语言&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;LANG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;en_US &lt;span class=&quot;c&quot;&gt;# 临时设置语言&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;修复 apt 安装错误&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;如果出现以下问题：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt &lt;span class=&quot;nt&quot;&gt;--fix-broken&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;install
&lt;/span&gt;正在读取软件包列表... 完成
正在分析软件包的依赖关系树... 完成
正在读取状态信息... 完成                 
正在修复依赖关系... 完成
下列软件包是自动安装的并且现在不需要了：
  libpcre2-posix2
使用&lt;span class=&quot;s1&quot;&gt;'sudo apt autoremove'&lt;/span&gt;来卸载它&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;它们&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;。
将会同时安装下列软件：
  libpcre2-posix3
下列【新】软件包将被安装：
  libpcre2-posix3
升级了 0 个软件包，新安装了 1 个软件包，要卸载 0 个软件包，有 4 个软件包未被升级。
有 4 个软件包没有被完全安装或卸载。
需要下载 0 B/8,354 B 的归档。
解压缩后会消耗 34.8 kB 的额外空间。
您希望继续执行吗？ &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Y/n] y
&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;正在读取数据库 ... 系统当前共安装有 274263 个文件和目录。&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
准备解压 .../libpcre2-posix3_10.39-3+ubuntu21.10.1+deb.sury.org+1_amd64.deb  ...
正在解压 libpcre2-posix3:amd64 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;10.39-3+ubuntu21.10.1+deb.sury.org+1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ...
dpkg: 处理归档 /var/cache/apt/archives/libpcre2-posix3_10.39-3+ubuntu21.10.1+deb.sury.org+1_amd64.deb &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;--unpack&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;时出错：
 正试图覆盖 /usr/lib/x86_64-linux-gnu/libpcre2-posix.so.3.0.1，它同时被包含于软件包 libpcre2-posix2:amd64 10.39-2+ubuntu21.10.1+deb.sury.org+1
在处理时有错误发生：
 /var/cache/apt/archives/libpcre2-posix3_10.39-3+ubuntu21.10.1+deb.sury.org+1_amd64.deb
E: Sub-process /usr/bin/dpkg returned an error code &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;可以通过以下命令修复：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;dpkg &lt;span class=&quot;nt&quot;&gt;--purge&lt;/span&gt; libpcre2-dev
dpkg: 依赖问题阻止了卸载 libpcre2-dev:amd64 的操作：
 php8.1-dev 依赖于 libpcre2-dev &lt;span class=&quot;o&quot;&gt;(&amp;gt;=&lt;/span&gt; 10.30&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;

dpkg: 处理软件包 libpcre2-dev:amd64 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;--purge&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;时出错：
 依赖问题 - 不会执行卸载
在处理时有错误发生：
 libpcre2-dev:amd64
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;dpkg &lt;span class=&quot;nt&quot;&gt;--purge&lt;/span&gt; php8.1-dev
&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;正在读取数据库 ... 系统当前共安装有 274263 个文件和目录。&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
正在卸载 php8.1-dev &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;8.1.3-1+ubuntu21.10.1+deb.sury.org+1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ...
正在处理用于 man-db &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;2.9.4-2&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 的触发器 ...
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;dpkg &lt;span class=&quot;nt&quot;&gt;--purge&lt;/span&gt; libpcre2-dev
&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;正在读取数据库 ... 系统当前共安装有 273904 个文件和目录。&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
正在卸载 libpcre2-dev:amd64 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;10.39-3+ubuntu21.10.1+deb.sury.org+1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ...
正在处理用于 man-db &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;2.9.4-2&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 的触发器 ...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>魔王卷子</name></author><category term="ubuntu" /><category term="ubuntu" /></entry><entry><title type="html">Git 基础用法</title><link href="/blog-archive/git/git-basic-usage/" rel="alternate" type="text/html" title="Git 基础用法" /><published>2021-11-21T08:00:30+08:00</published><updated>2021-11-21T08:00:30+08:00</updated><id>/blog-archive/git/git-basic-usage</id><content type="html" xml:base="/blog-archive/git/git-basic-usage/">&lt;h1 id=&quot;git-基础用法&quot;&gt;Git 基础用法&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/20211021.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;安装&quot;&gt;安装&lt;/h2&gt;

&lt;p&gt;直接执行以下命令即可&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;如果对版本有要求，需要使用最新版本的Git。可以通过以下命令安装：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;add-apt-repository ppa:git-core/ppa
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;配置秘钥&quot;&gt;配置秘钥&lt;/h2&gt;

&lt;p&gt;在拉取私有项目或者对项目进行提交代码时，需要检查你是否对项目的拉取和提交权限。&lt;/p&gt;

&lt;p&gt;解决的方案有两种，第一种就是在URL中填写账户密码，其实这种并不安全，GitHub正在对其逐渐废弃。第二种就是配置秘钥的方式，这个安全性非常好。推荐这种方式。&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ssh-keygen &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; rsa &lt;span class=&quot;nt&quot;&gt;-C&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;baoguoxiao0538@hotmail.com&quot;&lt;/span&gt;
Generating public/private rsa key pair.
Enter file &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;which to save the key &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;/home/mowangjuanzi/.ssh/id_rsa&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;: 
Created directory &lt;span class=&quot;s1&quot;&gt;'/home/mowangjuanzi/.ssh'&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
Enter passphrase &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;empty &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;no passphrase&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;: 
Enter same passphrase again: 
Your identification has been saved &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; /home/mowangjuanzi/.ssh/id_rsa
Your public key has been saved &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; /home/mowangjuanzi/.ssh/id_rsa.pub
The key fingerprint is:
SHA256:lXOmP4F0IXyrbrNek9wTPJVP7sZmsAJxzTWyo2A0P+Y baoguoxiao0538@hotmail.com
The key&lt;span class=&quot;s1&quot;&gt;'s randomart image is:
+---[RSA 3072]----+
|         .. .o o.|
|          .oo.+.+|
|          *.=*o++|
|         o X=.++o|
|        S +o. =Eo|
|          .+ + B |
|         .  O + *|
|          +. + = |
|         ooo     |
+----[SHA256]-----+
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;然后通过以下命令获取秘钥&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cat&lt;/span&gt; ~/.ssh/id_rsa.pub
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;然后将输出的内容添加到 &lt;a href=&quot;https://github.com/settings/keys&quot;&gt;GitHub&lt;/a&gt; 或者 &lt;a href=&quot;https://gitee.com/profile/sshkeys&quot;&gt;Gitee&lt;/a&gt;。&lt;/p&gt;

&lt;h2 id=&quot;设置用户名和邮箱&quot;&gt;设置用户名和邮箱&lt;/h2&gt;

&lt;p&gt;下面的命令是全局设置&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git config &lt;span class=&quot;nt&quot;&gt;--global&lt;/span&gt; user.name &lt;span class=&quot;s2&quot;&gt;&quot;your name&quot;&lt;/span&gt;
git config &lt;span class=&quot;nt&quot;&gt;--global&lt;/span&gt; user.email &lt;span class=&quot;s2&quot;&gt;&quot;your email&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;当然你也可以根据项目来设置不同的名称和密码。在指定的项目根目录执行以下命令：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git config user.name &lt;span class=&quot;s2&quot;&gt;&quot;your name&quot;&lt;/span&gt;
git config user.email &lt;span class=&quot;s2&quot;&gt;&quot;your email&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;小技巧&quot;&gt;小技巧&lt;/h2&gt;

&lt;p&gt;我这里列出了全局执行和单项目执行，直接取一个执行就好。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;关闭换行符的转换&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git config &lt;span class=&quot;nt&quot;&gt;--global&lt;/span&gt; core.autocrlf &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 全局&lt;/span&gt;
git config core.autocrlf &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 针对项目&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;提交忽略文件权限&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git config &lt;span class=&quot;nt&quot;&gt;--global&lt;/span&gt; core.filemode &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 全局&lt;/span&gt;
git config core.filemode &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 针对项目&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Git历史中删除但不删除实际文件&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git &lt;span class=&quot;nb&quot;&gt;rm&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--cached&lt;/span&gt; FILENAME
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;修改默认编辑器 从nano修改为vim&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git config &lt;span class=&quot;nt&quot;&gt;--global&lt;/span&gt; core.editor vim &lt;span class=&quot;c&quot;&gt;# 全局&lt;/span&gt;
git config core.editor vim &lt;span class=&quot;c&quot;&gt;# 针对项目&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;显示两个 commit 的区别&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git diff commit_id commit_id
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;显示两个 commit 中某个文件的区别&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git diff commit_id commit_id FILENAME
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;查看 Git 版本&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git &lt;span class=&quot;nt&quot;&gt;--version&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;删除远程仓库已经删除过的分支&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git remote prune origin
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;创建空分支&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git switch &lt;span class=&quot;nt&quot;&gt;--orphan&lt;/span&gt; &amp;lt;new-branch&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;设置全局-gitignore&quot;&gt;设置全局 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.gitignore&lt;/code&gt;&lt;/h2&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;/.idea/&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/.vscode/&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; ~/.gitignore_global
git config &lt;span class=&quot;nt&quot;&gt;--global&lt;/span&gt; core.excludesfile ~/.gitignore_global
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;以前-windows-碰到的问题记录&quot;&gt;以前 Windows 碰到的问题记录&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;有的电脑 win10 命令行或者 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git bash&lt;/code&gt; 命令行 会出现空格现象。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;解决方案： &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;win+R&lt;/code&gt; 打开 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cmd&lt;/code&gt;，在标题栏上右键， 属性 -&amp;gt; 选项 -&amp;gt; 使用旧控制台样式(选中)&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;命令行反应缓慢&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;一般是因为双显卡引起的。我的是 amd 和 inter 双显卡。&lt;/p&gt;

&lt;p&gt;解决方案： 打开 amd 控制中心 -&amp;gt; 游戏 -&amp;gt; 全局设置 -&amp;gt; 曲面细分模式 -&amp;gt; 使用应用程序的设置&lt;/p&gt;

&lt;p&gt;消除混杂模式 -&amp;gt; 使用应用程序设置&lt;/p&gt;

&lt;p&gt;amd 可切换显卡应用程序设置 -&amp;gt; 将编辑器和 cmd 和 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git bash&lt;/code&gt; 的都调为 高性能。&lt;/p&gt;</content><author><name>魔王卷子</name></author><category term="git" /><category term="git" /></entry><entry><title type="html">Ubuntu 下安装 Docker</title><link href="/blog-archive/docker/ubuntu-install-docker/" rel="alternate" type="text/html" title="Ubuntu 下安装 Docker" /><published>2021-10-30T00:00:00+08:00</published><updated>2022-03-29T06:03:00+08:00</updated><id>/blog-archive/docker/ubuntu-install-docker</id><content type="html" xml:base="/blog-archive/docker/ubuntu-install-docker/">&lt;h2 id=&quot;老版本-docker-卸载&quot;&gt;老版本 docker 卸载&lt;/h2&gt;

&lt;p&gt;老版本的docker叫做 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;docker&lt;/code&gt;，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;docker.io&lt;/code&gt;，或者说 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;docker-engine&lt;/code&gt;。如果安装了，删除它们。&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt remove docker docker-engine docker.io containerd runc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;如果你已经存在已安装的镜像，容器，数据卷，或者自定义的配置文件需要删除，可执行以下命令：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo rm&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-rf&lt;/span&gt; /var/lib/docker
&lt;span class=&quot;nb&quot;&gt;sudo rm&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-rf&lt;/span&gt; /var/lib/containerd
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;安装-docker&quot;&gt;安装 Docker&lt;/h2&gt;

&lt;p&gt;首先安装 Docker 官方 GPG key：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl &lt;span class=&quot;nt&quot;&gt;-fsSL&lt;/span&gt; https://download.docker.com/linux/ubuntu/gpg | &lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;gpg &lt;span class=&quot;nt&quot;&gt;--dearmor&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; /usr/share/keyrings/docker-archive-keyring.gpg
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;设置官网稳定版本源：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;deb [arch=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;dpkg &lt;span class=&quot;nt&quot;&gt;--print-architecture&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;lsb_release &lt;span class=&quot;nt&quot;&gt;-cs&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; stable&quot;&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;sudo tee&lt;/span&gt; /etc/apt/sources.list.d/docker.list &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; /dev/null
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;更新索引，并安装最新版本的 docker。&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get update
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;docker-ce docker-ce-cli containerd.io
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;通过运行&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hello-world&lt;/code&gt;镜像确认 Docker Engine 是否安装正确：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;docker run hello-world
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;安装后设置&quot;&gt;安装后设置&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;非root用户运行&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;创建 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;docker&lt;/code&gt; 用户组（执行这一步可能会提示该用户组已经存在）：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;groupadd docker
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;然后添加当前登录的 用户到 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;docker&lt;/code&gt; 组。&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;usermod &lt;span class=&quot;nt&quot;&gt;-aG&lt;/span&gt; docker &lt;span class=&quot;nv&quot;&gt;$USER&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;执行以下命令，实现更改。&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;newgrp docker 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;开机启动&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;这个在 Ubuntu 上是默认启动的。如果需要禁用自动自动可执行以下命令：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;systemctl disable docker.service
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;systemctl disable containerd.service
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;docker-compose-安装&quot;&gt;Docker Compose 安装&lt;/h2&gt;

&lt;p&gt;之前的 v1 版本是使用 Python 实现的。然后 v2 是使用 Golang 进行的重写。所以在命令上可能会有些不同。&lt;/p&gt;

&lt;p&gt;访问 https://github.com/docker/compose/releases 获取最新版本，我目前的安装版本是 2.3.4。执行如下：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-L&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;https://github.com/docker/compose/releases/download/v2.3.4/docker-compose-&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;uname&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;uname&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; /usr/local/bin/docker-compose
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;对二进制文件赋予执行权限&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo chmod&lt;/span&gt; +x /usr/local/bin/docker-compose
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;执行如下命令测试安装&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;docker-compose &lt;span class=&quot;nt&quot;&gt;--version&lt;/span&gt;
Docker Compose version v2.3.4
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;docker-compose-卸载&quot;&gt;Docker Compose 卸载&lt;/h2&gt;

&lt;p&gt;直接执行如下命令即可：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo rm&lt;/span&gt; /usr/local/bin/docker-compose
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;docker-添加镜像&quot;&gt;Docker 添加镜像&lt;/h2&gt;

&lt;p&gt;首先使用打开 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/docker/daemon.json&lt;/code&gt;，并添加以下内容&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;registry-mirrors&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;http://hub-mirror.c.163.com&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;最后重启服务：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;systemctl restart docker
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;总结&quot;&gt;总结&lt;/h2&gt;

&lt;p&gt;好了。基本上 Ubuntu 下安装 Docker 就介绍完毕了。&lt;/p&gt;</content><author><name>魔王卷子</name></author><category term="docker" /><category term="ubuntu" /><category term="docker" /></entry><entry><title type="html">Ubuntu 安装 Sentry</title><link href="/blog-archive/sentry/ubuntu-install-sentry/" rel="alternate" type="text/html" title="Ubuntu 安装 Sentry" /><published>2018-10-29T23:34:30+08:00</published><updated>2018-10-29T23:34:30+08:00</updated><id>/blog-archive/sentry/ubuntu-install-sentry</id><content type="html" xml:base="/blog-archive/sentry/ubuntu-install-sentry/">&lt;p&gt;之前写过一篇。但是现在 sentry 已经过去很久了。重新整理一下。&lt;/p&gt;

&lt;h2 id=&quot;前置条件&quot;&gt;前置条件&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Docker 19.03.6+&lt;/li&gt;
  &lt;li&gt;Compose 1.28.0+&lt;/li&gt;
  &lt;li&gt;4 CPU Cores&lt;/li&gt;
  &lt;li&gt;8 GB RAM&lt;/li&gt;
  &lt;li&gt;20 GB Free Disk Space&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;安装&quot;&gt;安装&lt;/h2&gt;

&lt;p&gt;创建目录：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;mkdir&lt;/span&gt; /data
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;然后拉取命令&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git clone git@github.com:getsentry/self-hosted.git sentry
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;然后进入目录&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;sentry
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;因为代码是随时进行更新的，所以需要切换为已经发行的最新&lt;a href=&quot;https://github.com/getsentry/self-hosted/releases/latest&quot;&gt;稳定版本&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;目前的稳定版本是 ‵22.3.0`。所以执行如下命令切换分支：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git checkout tags/22.3.0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;这里需要注意下映射端口。因为默认绑定端口为 9000，这跟 php-fpm 服务默认绑定 9000 端口相重复。所以修改 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SENTRY_BIND&lt;/code&gt; 从 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;9000&lt;/code&gt; 改成 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;9999&lt;/code&gt;：&lt;/p&gt;

&lt;div class=&quot;language-ini highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;py&quot;&gt;COMPOSE_PROJECT_NAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;sentry-self-hosted&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;SENTRY_EVENT_RETENTION_DAYS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;90&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# You can either use a port number or an IP:PORT combo for SENTRY_BIND
# See https://docs.docker.com/compose/compose-file/#ports for more
&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;SENTRY_BIND&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;9999&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Set SENTRY_MAIL_HOST to a valid FQDN (host/domain name) to be able to send emails!
# SENTRY_MAIL_HOST=example.com
&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;SENTRY_IMAGE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;getsentry/sentry:22.3.0&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;SNUBA_IMAGE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;getsentry/snuba:22.3.0&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;RELAY_IMAGE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;getsentry/relay:22.3.0&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;SYMBOLICATOR_IMAGE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;getsentry/symbolicator:0.4.2&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;WAL2JSON_VERSION&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;latest&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;HEALTHCHECK_INTERVAL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;30s&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;HEALTHCHECK_TIMEOUT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;60s&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;HEALTHCHECK_RETRIES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;5&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;修改完成配置后，执行如下命令即可安装：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo&lt;/span&gt; ./install.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;好了，这样sentry就安装完成了。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;其实并没有成功，我已经提交PR了。等修复之后再继续后面的编写。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;nginx转发&quot;&gt;Nginx转发&lt;/h2&gt;

&lt;div class=&quot;language-conf highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;server&lt;/span&gt; {
    &lt;span class=&quot;n&quot;&gt;listen&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;80&lt;/span&gt;;
    &lt;span class=&quot;n&quot;&gt;server_name&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;abc&lt;/span&gt;.&lt;span class=&quot;n&quot;&gt;example&lt;/span&gt;.&lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;;

    &lt;span class=&quot;n&quot;&gt;location&lt;/span&gt; / {
          &lt;span class=&quot;n&quot;&gt;proxy_set_header&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;-&lt;span class=&quot;n&quot;&gt;Real&lt;/span&gt;-&lt;span class=&quot;n&quot;&gt;IP&lt;/span&gt;  $&lt;span class=&quot;n&quot;&gt;remote_addr&lt;/span&gt;;
          &lt;span class=&quot;n&quot;&gt;proxy_set_header&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Host&lt;/span&gt;-&lt;span class=&quot;n&quot;&gt;Real&lt;/span&gt;-&lt;span class=&quot;n&quot;&gt;IP&lt;/span&gt;  $&lt;span class=&quot;n&quot;&gt;http_host&lt;/span&gt;;
          &lt;span class=&quot;n&quot;&gt;proxy_set_header&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;-&lt;span class=&quot;n&quot;&gt;Forwarded&lt;/span&gt;-&lt;span class=&quot;n&quot;&gt;For&lt;/span&gt; $&lt;span class=&quot;n&quot;&gt;proxy_add_x_forwarded_for&lt;/span&gt;;
          &lt;span class=&quot;n&quot;&gt;proxy_set_header&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;-&lt;span class=&quot;n&quot;&gt;Real&lt;/span&gt;-&lt;span class=&quot;n&quot;&gt;Pcol&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;http&lt;/span&gt;;
          &lt;span class=&quot;n&quot;&gt;proxy_pass&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;http&lt;/span&gt;://&lt;span class=&quot;n&quot;&gt;localhost&lt;/span&gt;:&lt;span class=&quot;m&quot;&gt;10000&lt;/span&gt;;
   }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;这样我们就可以使用绑定的域名进行访问了。&lt;/p&gt;

&lt;h2 id=&quot;端口安全&quot;&gt;端口安全&lt;/h2&gt;

&lt;p&gt;使用netstat命令查询端口状态：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# netstat -ntlp | grep 10000&lt;/span&gt;
tcp6       0      0 :::10000                :::&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;                    LISTEN      22354/docker-proxy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;发现这个并没有绑定127.0.0.1。这里我并没有研究好如何绑定127.0.0.1。这里可以通过防火墙进行端口控制。比如阿里云的入网端口管理，或者centos的firewalld命令都可以进行控制。具体就不展开了。&lt;/p&gt;

&lt;p&gt;PS：明天具体写如何配置邮件发送。&lt;/p&gt;</content><author><name>魔王卷子</name></author><category term="sentry" /><category term="ubuntu" /><category term="sentry" /></entry></feed>